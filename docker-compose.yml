services:
  nginx:
    image: nginx:alpine
    ports:
      - "9000:80"
      - "9443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - oauth2-proxy
      - backend
    networks:
      - oauth-network
    restart: unless-stopped

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    environment:
      - OAUTH2_PROXY_CLIENT_ID=${OAUTH2_PROXY_CLIENT_ID}
      - OAUTH2_PROXY_CLIENT_SECRET=${OAUTH2_PROXY_CLIENT_SECRET}
      - OAUTH2_PROXY_COOKIE_SECRET=${OAUTH2_PROXY_COOKIE_SECRET}
      - OAUTH2_PROXY_PROVIDER=${OAUTH2_PROXY_PROVIDER:-oidc}
      - OAUTH2_PROXY_EMAIL_DOMAINS=${OAUTH2_PROXY_EMAIL_DOMAINS:-*}
      - OAUTH2_PROXY_UPSTREAM=http://backend:8080
      - OAUTH2_PROXY_HTTP_ADDRESS=0.0.0.0:4180
      - OAUTH2_PROXY_REDIRECT_URL=${OAUTH2_PROXY_REDIRECT_URL}
      - OAUTH2_PROXY_COOKIE_SECURE=${OAUTH2_PROXY_COOKIE_SECURE:-false}
      - OAUTH2_PROXY_COOKIE_HTTPONLY=${OAUTH2_PROXY_COOKIE_HTTPONLY:-true}
      - OAUTH2_PROXY_SET_XAUTHREQUEST=${OAUTH2_PROXY_SET_XAUTHREQUEST:-true}
      - OAUTH2_PROXY_PASS_ACCESS_TOKEN=${OAUTH2_PROXY_PASS_ACCESS_TOKEN:-true}
      - OAUTH2_PROXY_PASS_USER_HEADERS=${OAUTH2_PROXY_PASS_USER_HEADERS:-true}
      - OAUTH2_PROXY_OIDC_ISSUER_URL=${OAUTH2_PROXY_OIDC_ISSUER_URL}
      - OAUTH2_PROXY_SKIP_OIDC_DISCOVERY=${OAUTH2_PROXY_SKIP_OIDC_DISCOVERY:-true}
      - OAUTH2_PROXY_LOGIN_URL=${OAUTH2_PROXY_LOGIN_URL}
      - OAUTH2_PROXY_REDEEM_URL=${OAUTH2_PROXY_REDEEM_URL}
      - OAUTH2_PROXY_PROFILE_URL=${OAUTH2_PROXY_PROFILE_URL}
      - OAUTH2_PROXY_VALIDATE_URL=${OAUTH2_PROXY_VALIDATE_URL}
      - OAUTH2_PROXY_SCOPE=${OAUTH2_PROXY_SCOPE:-openid email profile}
      - OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL=${OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL:-true}
    depends_on:
      - backend
    networks:
      - oauth-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4180/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  moto:
    image: motoserver/moto:5.1.9
    ports:
      - "5000:5000"
    environment:
      - MOTO_HOST=0.0.0.0
      - MOTO_PORT=5000
    networks:
      - oauth-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8090:8080"
    environment:
      - PORT=8080
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-testing}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-testing}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - AWS_ENDPOINT_URL=${AWS_ENDPOINT_URL:-http://moto:5000}
    depends_on:
      - moto
    networks:
      - oauth-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  cognito-setup:
    build:
      context: .
      dockerfile: cognito-setup/Dockerfile
    depends_on:
      - moto
    networks:
      - oauth-network
    environment:
      - AWS_ACCESS_KEY_ID=testing
      - AWS_SECRET_ACCESS_KEY=testing
      - AWS_DEFAULT_REGION=us-east-1
    restart: "no"

  rundeck:
    image: rundeck/rundeck:5.14.0-20250804
    ports:
      - "4440:4440"
    environment:
      - RUNDECK_GRAILS_URL=http://localhost:9000/rundeck
      - RUNDECK_SERVER_FORWARDED=true
      - RUNDECK_LOGGING_STRATEGY=CONSOLE
      - RUNDECK_DATABASE_DRIVER=org.h2.Driver
      - RUNDECK_DATABASE_USERNAME=rundeck
      - RUNDECK_DATABASE_PASSWORD=rundeck
      - RUNDECK_DATABASE_URL=jdbc:h2:mem:rundeckdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      - RUNDECK_PLUGIN_PROVISIONING_ENABLED=true
      - RUNDECK_PREAUTH_ENABLED=true
      - RUNDECK_PREAUTH_ATTRIBUTE_NAME=REMOTE_USER_EMAIL
      - RUNDECK_PREAUTH_DELIMITER=,
      - RUNDECK_PREAUTH_USERNAME_HEADER=X-Auth-Request-Email
      - RUNDECK_PREAUTH_ROLES_HEADER=X-Auth-Request-Roles
      - RUNDECK_PREAUTH_REDIRECT_LOGOUT=http://localhost:9000/oauth2/sign_out
      - RUNDECK_PREAUTH_USER_FIRST_NAME_HEADER=X-Auth-Request-Given-Name
      - RUNDECK_PREAUTH_USER_LAST_NAME_HEADER=X-Auth-Request-Family-Name
      # アセット配信の根本的解決設定
      - GRAILS_ASSETS_MINIFIED=false
      - GRAILS_ASSETS_PLUGIN_BOOTSTRAP_ENABLED=false
      - RUNDECK_STATIC_ASSETS_PATH=/home/rundeck/user-assets
      - RUNDECK_GRAILS_SERVER_URL=http://localhost:9000/rundeck
    volumes:
      - rundeck-data:/home/rundeck/server/data
      - ./rundeck/config:/home/rundeck/server/config
    depends_on:
      - backend
    networks:
      - oauth-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4440/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

networks:
  oauth-network:
    driver: bridge

volumes:
  moto-data:
  rundeck-data:
